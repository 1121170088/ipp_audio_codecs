<HTML><HEAD><TITLE>Intel® Integrated Performance Primitives AMR Wideband Sample 
for Linux*</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<META content="Microsoft FrontPage 6.0" name=GENERATOR></HEAD>
<BODY text=#000000 bgColor=#ffffff>
<CENTER>
<H1><B><I>Intel<SUP>®</SUP> Integrated Performance Primitives<BR>AMR Wideband Sample 
for Linux*</I></B></H1></CENTER>
<H5><A 
href="#Disclaimer">Disclaimer</A><BR><A 
href="#License_Definitions">License 
Definitions</A><BR><A 
href="#Overview">Overview</A><BR><A 
href="#System_Requirements">System 
Requirements</A><BR><A 
href="#Package_Contents">Package 
Contents</A> <BR><A 
href="#Installation">Installation</A> 
<BR><A 
href="#How_to_Build_Source_Code">How 
to Build Source Code</A><BR><A 
href="#Running_the_Software">Running 
the Software</A><BR><A 
href="#Support">Technical Support 
and Feedback</A><BR>&nbsp;</H5>
<H2><A name=Disclaimer></A>Disclaimer</H2>
<P class=MsoNormal style="mso-layout-grid-align: none"><SPAN 
style="FONT-SIZE: 10pt; COLOR: windowtext; mso-bidi-font-size: 7.5pt">INFORMATION 
IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL<SUP>®</SUP> PRODUCTS. NO 
LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL 
PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT. EXCEPT AS PROVIDED IN INTEL'S TERMS 
AND CONDITIONS OF SALE FOR SUCH PRODUCTS, INTEL ASSUMES NO LIABILITY WHATSOEVER, 
AND INTEL DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO SALE AND/OR USE 
OF INTEL PRODUCTS INCLUDING LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A 
PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR 
OTHER INTELLECTUAL PROPERTY RIGHT. </SPAN></P>
<P>Intel products are not intended for use in medical, life saving, life 
sustaining, critical control or safety systems, or in nuclear facility 
applications. Intel may make changes to specifications and product descriptions 
at anytime, without notice.</P>
<H2><A name=License_Definitions></A>License Definitions</H2>
<P>By downloading and installing this sample, you hereby agree that the
accompanying Materials are being provided to you under the terms and conditions
of the End User License Agreement for the Intel<sup>&#174;</sup> Integrated Performance Primitives
product previously accepted by you. Please refer to the file <b>
<a href="../ipplic.htm">ipplic.htm</a></b> for more information.</P>
<P>AMR wideband speech codec is an international standard promoted by 3GPP and other 
organizations. Implementations of these standards, or the standard enabled 
platforms may require licenses from various entities, including Intel 
Corporation.</P>
<H2><A name=Overview></A>Overview</H2>The multi-thread encoder and decoder 
samples included are fully compliant with the 3GPP TS 26 171, 173, 174, 190-194 
specifications and 
have been implemented using the Intel<sup>®</sup> Integrated Performance 
Primitives (Intel<sup>®</sup> IPP) Speech Coding functions. This standard is 
also known as GSM AMRWB standard supported by ETSI and G.722.2 Recommendation 
supported by ITU.&nbsp; Each of the two samples is a command line based application 
which processes a data given by single input file and stores result into output 
file.&nbsp; The encode sample consumes 16bit 16KHz raw PCM data, produces 
compressed bitstream which is stored then into output file in conventional test 
vector format. The decode sample consumes such a file contains bitstream data, 
extracts a bitstream frames out, decompress them and stores it in file as 16bit 
16KHz raw PCM data. 
<p>It shoud be noted that the size of an output bitstream file produced by the encoder 
sample should not be expected&nbsp; to be smaller 
than the size of an input PCM file as every bit of each 
frame stored in bitstream file as 16bit data. &nbsp;&nbsp;&nbsp; </p>
<P>Additional information on this software as well as other Intel<sup>®</sup> 
Software Development Products is available at <A 
href="http://developer.intel.com/software/products/">http://developer.intel.com/software/products/</A>. 

<p>To demonstrate that the codec implementation is thread-safe, the following 
procedure is performed: each thread processes its own copy of an input file 
independently, then the results are compared - if they are not identical an 
error is reported.</p>
<p>Note 1: This model differs from the model where many threads process the same 
stream in parallel, therefore it should not be expected that the given codec 
runs faster in the multi-threaded mode than it runs in the single-thread mode.</p>

<H2><A name=System_Requirements></A>System Requirements</H2><FONT 
size=-1><B>Recommended hardware:</B> &nbsp; </FONT>
<UL>
  <LI>A system based on the Intel<SUP>®</SUP> Pentium<SUP>®</SUP> 4 processor 
  with 128 megabytes of RAM, or better. 
  </UL><FONT size=-1><B>Hardware 
requirements:</B> </FONT>
<UL>
  <LI>A system based on a Intel<SUP>®</SUP> Pentium<SUP>®</SUP> processor, 
  Intel<SUP>®</SUP> Xeon&#8482; processor, or subsequent IA-32 processor 
  </UL><FONT size=-1><B>Software requirements:&nbsp; </B></FONT>
<UL>
  <LI>Intel<sup>®</sup> IPP 4.1 
  for Linux*, or later<LI>Linux* distributions with 2.4.x kernels<LI>Intel<SUP>®</SUP> C++ Compiler 
	8.0 for 
  Linux*, or later 
  <LI>GNU* Compiler g++ 2.96, or later</LI></UL>
<H2><A name=Package_Contents></A>Package Contents</H2>
<p>The <b>Intel<sup>®</sup> IPP AMR Wideband Sample for Linux*</b> package contains 
the following files: <span style="FONT-SIZE: 10pt">
<O:P></O:P>
</span></p>
<table height="213" width="100%" border="1" id="table1">
  <tr>
    <td width="100%" bgcolor="#C0C0C0" colspan="2"><b><span style='mso-bidi-font-size: 10.0pt'>
	./ipp_sample/</span>speech-coding<span style='mso-bidi-font-size: 10.0pt'>/</span></b></td>
  </tr>
	<tr>
    <td width="50%">ipplic<span style="mso-bidi-font-size: 10.0pt">.htm<u1:p> </span></td>
    <td width="50%">End User License Agreement</td>
  </tr>
	<tr>
    <td width="50%">support.txt</td>
    <td width="50%">Contains information for technical support</td>
  </tr>
  <tr>
    <td width="100%" bgColor="#c0c0c0" colSpan="2" height="23"><b>./ipp_sample/speech-coding/AMRWB/</b></td>
  </tr>
  <tr>
    <td width="50%" height="23">readme.htm</td>
    <td width="50%" height="23">This file</td>
  </tr>
  <tr>
    <td width="50%" height="26">Makefile</td>
    <td width="50%" height="26">Makefile</td>
  </tr>
  <tr>
    <td width="50%" height="26">build.sh</td>
    <td width="50%" height="26">Shell script to build the sample's executable 
    files</td>
  </tr>
  <tr>
    <td width="100%" bgColor="#c0c0c0" colSpan="2" height="23"><b>./ipp_sample/speech-coding/AMRWB/include/</b></td>
  </tr>
  <tr>
    <td width="50%" height="23">amrwb_types.h</td>
    <td width="50%" height="23">Coder type definition header file</td>
  </tr>
  <tr>
    <td width="50%" height="23">amrwbapi.h</td>
    <td width="50%" height="23">API header</td>
  </tr>
  <tr>
    <td width="50%" height="23">usc.h</td>
    <td width="50%" height="23">USC header file</td>
  </tr>
  <tr>
    <td width="100%" bgColor="#c0c0c0" colSpan="2" height="23"><b>./ipp_sample/speech-coding/AMRWB/api/</b></td>
  </tr>
  <tr>
    <td width="50%" height="23">bitpack.c</td>
    <td width="50%" height="23">Bitstream pack/unpack functions file</td>
  </tr>
  <tr>
    <td width="50%" height="23">encamrwb.c</td>
    <td width="50%" height="23">
    <span style="font-size: 11pt; font-family: Times">GSMAMR </span>functions 
    for encoding&nbsp; speech file</td>
  </tr>
  <tr>
    <td width="50%" height="23">decamrwb.c</td>
    <td width="50%" height="23">
    <span style="font-size: 11pt; font-family: Times">GSMAMR </span>functions 
    for decoding&nbsp; speech file</td>
  </tr>
  <tr>
    <td width="50%" height="23">dtx_util.c</td>
    <td width="50%" height="23">DTX functions file</td>
  </tr>
  <tr>
    <td width="50%" height="23">ownamrwb.c</td>
    <td width="50%" height="23">Coder functions file</td>
  </tr>
  <tr>
    <td width="50%" height="23">tab_util.c</td>
    <td width="50%" height="23">Coder tables file</td>
  </tr>
  <tr>
    <td width="50%" height="23">util.c</td>
    <td width="50%" height="23">Auxiliary functions</td>
  </tr>
  <tr>
    <td width="50%" height="23">uscamrwb.c</td>
    <td width="50%" height="23">USC functions file</td>
  </tr>
  <tr>
    <td width="50%" height="23">ownamrwb.h</td>
    <td width="50%" height="23">Coder constants, types and inner functions 
    definition header file</td>
  </tr>
  <tr>
    <td width="50%" height="23">scratchmem.h</td>
    <td width="50%" height="23">Scratch/stack memory management header file</td>
  </tr>
  <tr>
    <td width="100%" bgColor="#c0c0c0" colSpan="2" height="23"><b>./ipp_sample/speech-coding/AMRWB/samples/</b></td>
  </tr>
  <tr>
    <td width="50%" height="23">encoder.c</td>
    <td width="50%" height="23">Encoder main program file</td>
  </tr>
  <tr>
    <td width="50%" height="23">encoder.h</td>
    <td width="50%" height="23">Encoder main header file</td>
  </tr>
  <tr>
    <td width="50%" height="23">decoder.c</td>
    <td width="50%" height="23">Decoder main program file</td>
  </tr>
  <tr>
    <td width="50%" height="23">decoder.h</td>
    <td width="50%" height="23">Decoder main header file</td>
  </tr>
  <tr>
    <td width="50%" height="23">util_e.c</td>
    <td width="50%" height="23">Encoder utilities file</td>
  </tr>
  <tr>
    <td width="50%" height="23">util_e.h</td>
    <td width="50%" height="23">Encoder utilities header file</td>
  </tr>
  <tr>
    <td width="50%" height="23">util_d.c</td>
    <td width="50%" height="23">Decoder utilities file</td>
  </tr>
  <tr>
    <td width="50%" height="23">util_d.h</td>
    <td width="50%" height="23">Decoder utilities header file</td>
  </tr>
  <tr>
    <td width="50%" bgColor="#c0c0c0" height="23"><b>./ipp_sample/speech-coding/AMRWB/vm/include/</b></td>
    <td width="50%" bgColor="#c0c0c0" height="23">&nbsp;</td>
  </tr>
  <tr>
    <td width="50%" height="23">vm_thread.h</td>
    <td width="50%" height="23">Header file containing definition of cross 
    platform functionality, which provides threading support</td>
  </tr>
  <tr>
    <td width="50%" height="23">vm_types.h</td>
    <td width="50%" height="23">Header file containing definition of cross 
    platform types, which are used in definitions of cross platform 
    functionality</td>
  </tr>
  <tr>
    <td width="100%" bgColor="#c0c0c0" colSpan="2" height="23"><b>./ipp_sample/speech-coding/AMRWB/vm/include/sys/</b></td>
  </tr>
  <tr>
    <td width="50%" height="23">vm_types_linux32.h</td>
    <td width="50%" height="23">Header file containing definition of cross 
    platform types for IA-32 platforms running Linux*</td>
  </tr>
  <tr>
    <td width="100%" bgColor="#c0c0c0" colSpan="2" height="23"><b>./ipp_sample/speech-coding/AMRWB/vm/src/</b></td>
  </tr>
  <tr>
    <td width="50%" height="23">vm_thread_linux32.c</td>
    <td width="50%" height="23">Source file containing implementation of 
    threading support for IA-32 platforms running Linux*</td>
  </tr>
</table>
<H2><A name=Installation></A>Installation</H2>
<P>Extract all files in l_ipp-sample-speech-coding_*.tgz to a desired folder. Please make sure 
to preserve the directory structure. The files for the  AMRWB sample will be 
found in the ./ipp_sample/speech-coding/AMRWB/ folder.<H2><A name=How_to_Build_Source_Code></A>How to Build Source Code</H2>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'>Verify
that the IPPROOT environment variables contain the path where the IPP package
is installed.</p>
<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'>
<b>Evaluation Users: </b>If you are using an Evaluation version of Intel(R) IPP, 
please make sure that IPPROOT is changed to: <b>/opt/intel/ipp41_eval/ia32_itanium</b> 
(using the default install directory).</p>

<p>Execute the file <b>build.sh</b> 
to build the AMRWB coder sample.</p>
<H2><A name=Running_the_Software></A>Running the Software</H2>
<p>After building, be sure that the <b>LD_LIBRARY_PATH</b> environment variable 
includes the directories of the .so files from the Intel<sup>®</sup> IPP 
installation. This can be accomplished by entering the following at the command 
prompt:&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>export LD_LIBRARY_PATH=/opt/intel/ipp41/ia32_itanium/sharedlib:/opt/intel/ipp41/ia32_itanium/sharedlib/linux32:$LD_LIBRARY_PATH</p>
<p>or by running the shell script <b>ippvars32.sh</b> from the Intel<sup>®</sup> 
IPP installation (located in /opt/intel/ipp41/ia32_itanium/tools/env/ by default).</p>
<p>To run one of the  AMRWB encoder sample, type:&nbsp;</p>
<p>encodergsmamr [options] &lt;inPCMFile&gt; &lt;outBitstreamTestFile&gt;&nbsp;</p>
<p>Encoder option list:&nbsp;</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; 
-r660|r885|r1265|r1425|r1585|r1825|r1985|r2305|r2385|r&lt;filename&gt;&nbsp; bit rates 
6.6, 8.85, 12.65, 
14.25, 15.85, 18.25, 19.85,23.05 or 23.85 kbit/s or bit rates given&nbsp;by file on&nbsp;per frame basis.<br>
&nbsp;&nbsp;&nbsp;&nbsp; -v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VAD enabled. Default: VAD disabled.&nbsp;</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input 
data is A-Law PCM.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -u&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input 
data is Mu-Law PCM.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Default: input data is 16-bit linear PCM.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -T&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; don`t 
truncate input data to 14 bits.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output 
additional information.<br>
&nbsp;&nbsp;&nbsp;&nbsp; -c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write to codecspeed.csv file information about coder 
performance.<br>
&nbsp;&nbsp;&nbsp;&nbsp; -s&nbsp; &lt;rep&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repeater, how many times input file shall be encoded without 
reset of encoder,&nbsp; default: &lt;rep&gt;=1<br>
&nbsp;&nbsp;&nbsp;&nbsp; -t&nbsp; &lt;num&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number of threads to perform the same encoding operation , 
default: &lt;num&gt;=1.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&lt;inPCMFile&gt; - input file contains 
16-bit 16 KHz PCM to encode,</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&lt;outBitstreamTestFile&gt; - output file, to write 
the encoded bit-stream,&nbsp; if repeater is on only the result of last encoding will 
be written into output file.&nbsp;</p>
<p>To run one of the  AMRWB decoder sample, type:&nbsp;</p>
<p>decodergsmamr [options] &lt;inBitstreamFile&gt; &lt;outPCMFile&gt;&nbsp;</p>
<p>Decoder option list:&nbsp;</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write 
the output data in A-Law PCM format.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -u&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write 
the output data in Mu-Law PCM format.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Default: Write the output data in 16-bit linear PCM format.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -T&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; don`t 
truncate output data to 14 bits.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&nbsp;&nbsp;&nbsp;&nbsp; -n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output 
additional information.<br>
&nbsp;&nbsp;&nbsp;&nbsp; -c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write to codecspeed.csv file information about coder 
performance.<br>
&nbsp;&nbsp;&nbsp;&nbsp; -s&nbsp; &lt;rep&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repeater, how many times input file shall be encoded without 
reset of encoder,&nbsp; default: &lt;rep&gt;=1<br>
&nbsp;&nbsp;&nbsp;&nbsp; -t&nbsp; &lt;num&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number of threads to perform the same encoding operation , 
default: &lt;num&gt;=1.</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&lt;inBitstreamFile&gt; - input file contains 
bit-stream to decode,</p>
<p style="MARGIN-TOP: 3px; MARGIN-BOTTOM: 3px">&lt;outPCMFile&gt; - output file, to write 
the decoded PCM,&nbsp; if repeater is on only the result of last encoding will be 
written into output file.&nbsp;</p>
<p>NOTE: The bit-stream and PCM files (after decode) are used in the format of the test files 
of&nbsp; the  AMRWB simulation software which is available via&nbsp; ETSI official WEB 
site. To check the bit-to-bit exactness against them, correspondent bit-stream 
and PCM test files shall be used in pair.</p>
<H2><A name=Support></A>Technical Support and Feedback</H2>
<p>Your feedback on the Intel IPP samples is very important to us and your input 
will be considered for future releases. </p>
<p>When building original sample code, let us know if you have any problems 
with:</p>
<ol>
	<li>Installation</li>
	<li>Compiling errors</li>
	<li>Linking errors</li>
	<li>Runtime errors or incorrect output</li>
</ol>
<p>To receive technical support and product updates for the tools provided in 
this product you need to register at the
<a href="https://shale.intel.com/registrationcenter/register.asp">Intel® 
Registration Center</a> and click on &quot;Create New Account&quot;.</p>
<p>For information about the Intel<sup>®</sup> IPP's FAQ's, tips and tricks, and 
other support information, please visit:
<a href="http://support.intel.com/support/performancetools/libraries/">
http://support.intel.com/support/performancetools/libraries/</a></p>
<p><b>Note:</b><br>
If you are having trouble registering or unable to access your Premier Support 
account, contact <b>developer.support@intel.com</b>. Please do not email your 
technical issue to <b>developer.support@intel.com</b> as it is not a secure 
medium.</p>
<p>To submit an issue via the Intel<sup>®</sup> Premier Support website please 
perform the following steps:</p>
<ol type="1">
	<li>Ensure that Java* and JavaScript* are enabled in your browser. 
	</li>
	<li>Go to <a href="https://premier.intel.com/">https://premier.intel.com/</a>. 
	</li>
	<li>Type in your Login and Password.&nbsp; Both are case-sensitive. 
	</li>
	<li>Click the &quot;Submit&quot; button. 
	</li>
	<li>Read the Confidentiality Statement and click the &quot;I Accept&quot; button. 
	</li>
	<li>Click on the &quot;Go&quot; button next to the &quot;Product&quot; drop-down list. 
	</li>
	<li>Click on the &quot;Submit Issue&quot; link in the left navigation bar. 
	</li>
	<li>Choose &quot;Development Environment (tools,SDV,EAP)&quot; from the &quot;Product Type&quot; 
	drop-down list. 
	</li>
	<li>If this is a software or license-related issue choose <b>&quot;Intel® IPP 
	Samples*&quot;</b> from the &quot;Product Name&quot; drop-down list.</li>
	<li>Enter your question and complete the fields in the windows that follow 
	to successfully submit the issue. </li>
</ol>
<p>Please follow these guidelines when you submit a technical issue to Intel 
Premier Support: <br>
<a href="http://support.intel.com/support/performancetools/libraries/ipp/sb/cs-010663.htm">
http://support.intel.com/support/performancetools/libraries/ipp/sb/cs-010663.htm</a>
</p>
<p>For product user forum, on-line help and other support information, please 
visit:
<a href="http://support.intel.com/support/performancetools/libraries/ipp/">
http://support.intel.com/support/performancetools/libraries/ipp/</a></p>
<FONT 
size=-2>
<P>Celeron, Dialogic, i386, i486, iCOMP, Intel, Intel logo, Intel386, Intel486, 
Intel740, IntelDX2, IntelDX4, IntelSX2, Intel Inside, Intel Inside logo, Intel 
NetBurst, Intel NetStructure, Intel Xeon, Intel XScale, Itanium, MMX, MMX logo, 
Pentium, Pentium II Xeon, Pentium III Xeon, and VTune are trademarks or 
registered trademarks of Intel Corporation or its subsidiaries in the United 
States and other countries.<BR>&nbsp;<BR>* Other names and brands may be claimed 
as the property of others.<BR>&nbsp;<BR>Copyright ©  2004 Intel Corporation. 
</P></FONT></BODY></HTML>